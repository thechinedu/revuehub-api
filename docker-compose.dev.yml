services:
  pg:
    image: postgres:15.3-alpine
    container_name: revuehub-api-pg
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 1s
      timeout: 2s
      retries: 5
    user: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
  redis:
    image: redis:6.2-alpine
    container_name: revuehub-api-redis
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1s
      timeout: 2s
      retries: 5
    ports:
      - 6379:6379
  pg-test:
    image: postgres:15.3-alpine
    container_name: revuehub-api-pg-test
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 1s
      timeout: 2s
      retries: 5
    user: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5433:5432
  redis-test:
    image: redis:6.2-alpine
    container_name: revuehub-api-redis-test
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1s
      timeout: 2s
      retries: 5
    ports:
      - 7777:6379
  app:
    build:
      context: .
      target: builder
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ['/bin/sh', '-c', 'yarn migrate:latest && yarn start:dev']
    environment:
      DATABASE_URL: ${DATABASE_URL}
      APP_ENV: ${APP_ENV}
      DEBUG: ${DEBUG}
      PORT: ${PORT}
      GITHUB_OAUTH_CLIENT_ID: ${GITHUB_OAUTH_CLIENT_ID}
      GITHUB_OAUTH_CLIENT_SECRET: ${GITHUB_OAUTH_CLIENT_SECRET}
      CLIENT_ORIGIN: ${CLIENT_ORIGIN}
      GITHUB_AUTH_ENDPOINT: ${GITHUB_AUTH_ENDPOINT}
      APP_SECRET: ${APP_SECRET}
      REDIS_URL: ${REDIS_URL}
    ports:
      - 1001:1001
    volumes:
      - ./:/app
      - /app/node_modules
